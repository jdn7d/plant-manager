exit
plant_url
opened_url
plant_url
exit
opened_url 
exit
;
exit
url
;
exit
PlantManager::Plant.all[@input.to_i-1].url
;
exit
 PlantManager::Scraper.all_names[plant_number].url
;
exit
PlantManager::Scraper.all_names[plant_number]
;
exit
PlantManager::Scraper.all_names[plant_number].url
;
exit
 PlantManager::Scraper.all_names[plant_number].url
plant_number
exit
@@all_names
exit
@all
@@all_names
exit
;
;;
;
@@all_names.text
@@all_names
exit
@@all_names
exit
plant_name
parsed_page.css(".Liner")[1].css("a").text
urls
parsed_page.css(".Liner")[1].css("a")
parsed_page
exit
;
plant_url
plant_name
;
exit
@names
;
 PlantManager::Scraper.scrape_names
;
exit
exi
;
exit
PlantManager::Plant.all.each.with_index(1)
PlantManager::Plant.all.each.with_index(1) {|i, index| puts "#{index}. #{i.name}"}
all_plants
all_planys
PlantManager::Scraper.scrape_names
all_plants
PlantManager::Plant.all.each.with_index(1) {|i, index| puts "#{index}. #{i.name}"}
all_plants
exit
light
water
name
exit
light
water
name
exit
fertilizer
water
light
exit
name
light
exit
water
name
exit
paragraph.css("span b")
light
paragraph.css('span b:contains("Light:")')
paragraph.css('span b:contains("Light:")'
light.text
name
light
wwater
paragraph.css("liner")
paragraph.css("span")
paragraph.css("span b")
water.text
water
name
exit
name
exit
name
light
water
exit
fertilizer
light
water
exit
light
water
exit
light
ligh
water
exit
name
water
exit
opened_url.css("p") [4].text
opened_url.css("p") [4]
name
plant_information
opened_url
water
exit
water
exit
paragraph.css('span b').text
paragraph.css('span b')
water
light
exit
lgiht
water
exit
name
light
water
exit
water
light
light.text
water.text
water
;
exit
opened_url
name
;
exit
PlantManager::Plant.all_plants
ezit
all
exit
PlantManager::Plant.all_plants
fk
sd
sdlkfj'sdfj
dlkj
exit
PlantManager::Plant.all_plants
exit
opened_url.css("b").text
opened_url.css("b")
opened_url.css("b").text
opened_url.css("p").text
opened_url.css("p")
exit
opened_url.css("h1").text
opened_url.css("h1")
opened_url
exit
opened_url
urls
opened_url.css("h1")
exit
opened_url.css("h1")
opened_url
exit
parsed_page.css("a").collect {|all| all.attribute("href").value}
parsed_page.css("a")
parsed_page
parsed_page.css
exit
all_plants
name = parsed_page.css("a").collect {|all| all.attribute("href").value }
exit
parsed_page.css("a").collect {|all| all.attribute("href").value }
parsed_page.css("a").text.map {|a| a.attribute('href').value}
parsed_page.css("a").text[1001]
parsed_page.css("a").text[1]
parsed_page.css("a").map {|all| all.text}
parsed_page.css("a").map {|all| all.text
parsed_page.css("a").first.text
exit
name =  parsed_page.css("a").first
parsed_page.css("div.liner").css("b").text.first.attr("href")
exit
parsed_page.css("div.liner").css("b").text
parsed_page.css("div.liner").css("b")text
parsed_page.css("span").text
parsed_page.css("p").text
parsed_page.css("b").text
exit
parsed_page.css("a").text.first
parsed_page.css("a").text
exit
name =  parsed_page.css("a").text.map {|a| a.attribute('src').value}
parsed_page.css("div.liner").collect { |a| a.tname =  parsed_page.css("a").text.map {|a| a.attribute('src').value}text }
parsed_page.css("div.liner").collect { |a| a.tname =  parsed_page.css("a").text.map {|a| a.attribute('src').value}ext }
parsed_page.css("div.liner").collect { |a| a.text }
name =  parsed_page.css("a").text.map {|a| a.attribute('href').value}
name =  parsed_page.css("a").text.collect {|a| a.attribute('href').value}
name =  parsed_page.css("a").text.each {|a| a.attribute('href').value}
name = parsed_page.css("a").text.map
name = parsed_page.css("a").map
name = parsed_page.css("a").text
name.count
name = parsed_page.css("a").text
name = parsed_page.css("h2").text
exit
name = parsed_page.css("h2").text
name = parsed_page.css("h2.calloutbox").text
PlantManager::Scraper.scraper
exit
scraper
exit
parsed_page
plant_names
plant_names.count
exit
